# Generated by Django 2.1.5 on 2019-01-29 18:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('defense', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('physical_attack', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('intelligence', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('magic_attack', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('magic_resist', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('agility', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('dodge_chance', models.FloatField(default=0)),
                ('critic_chance', models.FloatField(default=0)),
                ('vitality', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('health', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('name', models.CharField(max_length=20)),
                ('level', models.IntegerField(default=1)),
                ('experience', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('defense', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('physical_attack', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('intelligence', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('magic_attack', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('magic_resist', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('agility', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('dodge_chance', models.FloatField(default=0)),
                ('critic_chance', models.FloatField(default=0)),
                ('vitality', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('health', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('name', models.CharField(max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Hero')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('multiplier', models.FloatField(default=1)),
                ('value', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HeroStatistics',
            fields=[
                ('statistic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.Statistic')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Hero')),
            ],
            bases=('game.statistic',),
        ),
        migrations.CreateModel(
            name='ItemStatistics',
            fields=[
                ('statistic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.Statistic')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Item')),
            ],
            bases=('game.statistic',),
        ),
        migrations.AddField(
            model_name='statistic',
            name='parent',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Statistic'),
        ),
        migrations.AddField(
            model_name='action',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Location'),
        ),
    ]
